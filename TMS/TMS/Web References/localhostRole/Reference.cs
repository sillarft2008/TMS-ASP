//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TMS.localhostRole {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RoleWebserviceSoapBinding", Namespace="http://webservice_layer")]
    public partial class RoleWebserviceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getAllRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback findRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback createRoleOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public RoleWebserviceService() {
            this.Url = global::TMS.Properties.Settings.Default.TMS_localhostRole_RoleWebserviceService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getAllRolesCompletedEventHandler getAllRolesCompleted;
        
        /// <remarks/>
        public event findRoleCompletedEventHandler findRoleCompleted;
        
        /// <remarks/>
        public event deleteRoleCompletedEventHandler deleteRoleCompleted;
        
        /// <remarks/>
        public event updateRoleCompletedEventHandler updateRoleCompleted;
        
        /// <remarks/>
        public event createRoleCompletedEventHandler createRoleCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice_layer", ResponseNamespace="http://webservice_layer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getAllRolesReturn")]
        public Role[] getAllRoles() {
            object[] results = this.Invoke("getAllRoles", new object[0]);
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllRolesAsync() {
            this.getAllRolesAsync(null);
        }
        
        /// <remarks/>
        public void getAllRolesAsync(object userState) {
            if ((this.getAllRolesOperationCompleted == null)) {
                this.getAllRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllRolesOperationCompleted);
            }
            this.InvokeAsync("getAllRoles", new object[0], this.getAllRolesOperationCompleted, userState);
        }
        
        private void OngetAllRolesOperationCompleted(object arg) {
            if ((this.getAllRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllRolesCompleted(this, new getAllRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice_layer", ResponseNamespace="http://webservice_layer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("findRoleReturn")]
        public Role findRole(int Id) {
            object[] results = this.Invoke("findRole", new object[] {
                        Id});
            return ((Role)(results[0]));
        }
        
        /// <remarks/>
        public void findRoleAsync(int Id) {
            this.findRoleAsync(Id, null);
        }
        
        /// <remarks/>
        public void findRoleAsync(int Id, object userState) {
            if ((this.findRoleOperationCompleted == null)) {
                this.findRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindRoleOperationCompleted);
            }
            this.InvokeAsync("findRole", new object[] {
                        Id}, this.findRoleOperationCompleted, userState);
        }
        
        private void OnfindRoleOperationCompleted(object arg) {
            if ((this.findRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findRoleCompleted(this, new findRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice_layer", ResponseNamespace="http://webservice_layer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("deleteRoleReturn")]
        public string deleteRole(Role role) {
            object[] results = this.Invoke("deleteRole", new object[] {
                        role});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteRoleAsync(Role role) {
            this.deleteRoleAsync(role, null);
        }
        
        /// <remarks/>
        public void deleteRoleAsync(Role role, object userState) {
            if ((this.deleteRoleOperationCompleted == null)) {
                this.deleteRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteRoleOperationCompleted);
            }
            this.InvokeAsync("deleteRole", new object[] {
                        role}, this.deleteRoleOperationCompleted, userState);
        }
        
        private void OndeleteRoleOperationCompleted(object arg) {
            if ((this.deleteRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteRoleCompleted(this, new deleteRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice_layer", ResponseNamespace="http://webservice_layer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("updateRoleReturn")]
        public string updateRole(Role role) {
            object[] results = this.Invoke("updateRole", new object[] {
                        role});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateRoleAsync(Role role) {
            this.updateRoleAsync(role, null);
        }
        
        /// <remarks/>
        public void updateRoleAsync(Role role, object userState) {
            if ((this.updateRoleOperationCompleted == null)) {
                this.updateRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateRoleOperationCompleted);
            }
            this.InvokeAsync("updateRole", new object[] {
                        role}, this.updateRoleOperationCompleted, userState);
        }
        
        private void OnupdateRoleOperationCompleted(object arg) {
            if ((this.updateRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateRoleCompleted(this, new updateRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice_layer", ResponseNamespace="http://webservice_layer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("createRoleReturn")]
        public string createRole(Role role) {
            object[] results = this.Invoke("createRole", new object[] {
                        role});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createRoleAsync(Role role) {
            this.createRoleAsync(role, null);
        }
        
        /// <remarks/>
        public void createRoleAsync(Role role, object userState) {
            if ((this.createRoleOperationCompleted == null)) {
                this.createRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateRoleOperationCompleted);
            }
            this.InvokeAsync("createRole", new object[] {
                        role}, this.createRoleOperationCompleted, userState);
        }
        
        private void OncreateRoleOperationCompleted(object arg) {
            if ((this.createRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createRoleCompleted(this, new createRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice_layer")]
    public partial class Role {
        
        private int idField;
        
        private string role_nameField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string role_name {
            get {
                return this.role_nameField;
            }
            set {
                this.role_nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getAllRolesCompletedEventHandler(object sender, getAllRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findRoleCompletedEventHandler(object sender, findRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void deleteRoleCompletedEventHandler(object sender, deleteRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void updateRoleCompletedEventHandler(object sender, updateRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createRoleCompletedEventHandler(object sender, createRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591